==============================
How to use 2-matrix_divided.py
==============================

this module define a function called ``matrix_divided(matrix, div)``.

Usage:
======
``matrix_divided(...)`` return a new matrix that contain the division of all element of matrix
by the div (number).

::
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
	>>> matrix = [[1, 2, 3], [4, 5, 6]]

	>>> matrix_divided(matrix, 3) #doctest: +NORMALIZE_WHITESPACE
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided(matrix, -3)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]


	>>> matrix_divided([[-0.33, 0.67, -1.0], [1.33, 1.67, -2.0]], -72)
	[[0.0, -0.01, 0.01], [-0.02, -0.02, 0.03]]

	>>> matrix_divided([[-0.33, 0.67, -1.0], [1.33, 1.67, -2.0]], 2.3)
	[[-0.14, 0.29, -0.43], [0.58, 0.73, -0.87]]

	>>> matrix_divided([[-0.33, 0.67, -1.0], [1.33, 1.67, -2.0]], -0.29)
	[[1.14, -2.31, 3.45], [-4.59, -5.76, 6.9]]

	>>> matrix_divided(matrix, 29.2)
	[[0.03, 0.07, 0.1], [0.14, 0.17, 0.21]]

	>>> matrix_divided(matrix, "slkd")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided(matrix, None)
  	Traceback (most recent call last):
  	TypeError: div must be a number

	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided("lkdkd", 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([3,2,4], 8)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[2,22,2 ,3,4], [23, 2]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([], 6)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[]], 6)
	[[]]
